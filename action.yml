name: "Create GitHub App Token"
description: "GitHub Action for creating a GitHub App installation access token"
author: "Gregor Martynus and Parker Brown"
branding:
  icon: "lock"
  color: "gray-dark"
inputs:
  app-id:
    description: "GitHub App ID"
    required: false # TODO: When 'app_id' is removed, make 'app-id' required
  app_id:
    description: "GitHub App ID"
    required: false
    deprecationMessage: "'app_id' is deprecated and will be removed in a future version. Use 'app-id' instead."
  private-key:
    description: "GitHub App private key"
    required: false # TODO: When 'private_key' is removed, make 'private-key' required
  private_key:
    description: "GitHub App private key"
    required: false
    deprecationMessage: "'private_key' is deprecated and will be removed in a future version. Use 'private-key' instead."
  owner:
    description: "GitHub App owner (defaults to current repository owner)"
    required: false
  repositories:
    description: "Repositories to install the GitHub App on (defaults to current repository if owner is unset)"
    required: false
  skip-token-revoke:
    description: "If truthy, the token will not be revoked when the current job is complete"
    required: false
  skip_token_revoke:
    description: "If truthy, the token will not be revoked when the current job is complete"
    required: false
    deprecationMessage: "'skip_token_revoke' is deprecated and will be removed in a future version. Use 'skip-token-revoke' instead."
  # Make GitHub API configurable to support non-GitHub Cloud use cases
  # see https://github.com/actions/create-github-app-token/issues/77
  github-api-url:
    description: The URL of the GitHub REST API.
    default: ${{ github.api_url }}
  permissions:
    description: |
      This option lets you define the specific permissions granted to the access token. Leave this field empty to grant the access token full access to all available permissions on the app.

      For enhanced security, it's recommended to specify only the necessary permissions. This reduces the potential impact if the token is compromised.

      Permissions are listed in a multiline format: <feature>:<access_level>.

        * <feature>: Identifies the specific functionality (e.g., pull_requests, administration).
        * <access_level>: Defines the level of access (e.g., read, write).

      For a complete list of available permissions, refer to the permissions body parameter documentation: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-an-installation-access-token-for-a-github-app.

      Example:

      permissions: |
        pull_requests:write
        administration:read

      This example grants write access to pull requests and read access to administrative data.
outputs:
  token:
    description: "GitHub installation access token"
  installation-id:
    description: "GitHub App installation ID"
  app-slug:
    description: "GitHub App slug"
runs:
  using: "node20"
  main: "dist/main.cjs"
  post: "dist/post.cjs"
